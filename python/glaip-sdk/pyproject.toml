[project]
name = "glaip-sdk"
version = "0.1.1"
description = "Python SDK for AI Agent Platform - Simplified CLI Design"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [{name = "Raymond Christopher", email = "raymond.christopher@gdplabs.id"}]

dependencies = [
    "httpx>=0.28.1",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "python-dotenv>=1.1.1,<2.0.0",
    "readchar>=4.2.1,<5.0.0",
    "questionary>=2.1.0,<3.0.0",
    "click>=8.2.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-dotenv>=0.5.2",
    "pre-commit>=4.3.0",
    "pytest-xdist>=3.8.0",
]

[project.scripts]
aip = "glaip_sdk.cli.main:main"



[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["glaip_sdk"]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "B904",  # use 'raise ... from err' in except clauses
    "B017",  # pytest.raises with Exception
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"



[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--disable-warnings",
    "--maxfail=5"
]
markers = [
    "unit: Unit tests that don't require external services",
    "integration: Integration tests that require backend services",
    "sdk: SDK integration tests that test the Python client",
    "cli: CLI integration tests that test the command-line interface",
    "slow: Tests that are slow to run",
    "asyncio: Async tests"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
    "ignore::RuntimeWarning"
]

[tool.coverage.run]
source = ["glaip_sdk"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
